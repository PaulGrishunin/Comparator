{"ast":null,"code":"import { dataToArray } from './util';\nvar scrollId = 'scroll-id';\n\nfunction EventDispatcher(target) {\n  this._listeners = {};\n  this._eventTarget = target || {};\n  this.recoverLists = [];\n  this._listFun = {};\n}\n\nEventDispatcher.prototype = {\n  addEventListener: function addEventListener(type, callback, target, options) {\n    var types = type.split('.');\n    var _type = types[0];\n    var namespaces = types[1];\n\n    if (target && !target.getAttribute(scrollId)) {\n      target.setAttribute(scrollId, (Date.now() + Math.random()).toString(32).replace('.', ''));\n    }\n\n    var listName = '' + _type + (target ? '_' + target.getAttribute(scrollId) : '');\n    var list = this._listeners[listName];\n    var index = 0;\n    var listener = void 0;\n    var i = void 0;\n\n    if (!list) {\n      list = [];\n      this._listeners[listName] = list;\n    }\n\n    i = list.length;\n\n    while (--i > -1) {\n      listener = list[i];\n\n      if (listener.n === namespaces && listener.c === callback) {\n        list.splice(i, 1);\n      } else if (index === 0) {\n        index = i + 1;\n      }\n    }\n\n    var $target = target || this._eventTarget;\n    list.splice(index, 0, {\n      c: callback,\n      n: namespaces,\n      t: _type\n    });\n\n    if (!this._listFun[listName]) {\n      this._listFun[listName] = this._listFun[listName] || this.dispatchEvent.bind(this, {\n        type: _type,\n        target: target\n      });\n\n      if ($target.addEventListener) {\n        $target.addEventListener(_type, this._listFun[listName], options);\n      } else if ($target.attachEvent) {\n        $target.attachEvent('on' + _type, this._listFun[listName]);\n      }\n    }\n  },\n  removeEventListener: function removeEventListener(type, callback, target, force) {\n    var types = type.split('.');\n    var _type = types[0];\n    var namespaces = types[1];\n    var listName = '' + _type + (target ? '_' + target.getAttribute(scrollId) : '');\n    var list = this._listeners[listName];\n    var i = void 0;\n    var _force = force;\n\n    if (!namespaces) {\n      _force = true;\n    }\n\n    if (list) {\n      i = list.length;\n      var $target = target || this._eventTarget;\n\n      while (--i > -1) {\n        if (list[i].c === callback && (_force || list[i].n === namespaces)) {\n          list.splice(i, 1);\n\n          if (!list.length) {\n            var func = this._listFun[listName];\n            delete this._listeners[listName];\n            delete this._listFun[listName];\n\n            if ($target.removeEventListener) {\n              $target.removeEventListener(_type, func);\n            } else if ($target.detachEvent) {\n              $target.detachEvent('on' + _type, func);\n            }\n          }\n\n          if (!_force) {\n            return;\n          }\n        }\n      }\n    }\n  },\n  dispatchEvent: function dispatchEvent(_ref, e) {\n    var type = _ref.type,\n        target = _ref.target;\n    var listName = '' + type + (target ? '_' + target.getAttribute(scrollId) : '');\n    var list = this._listeners[listName];\n    var i = void 0;\n    var t = void 0;\n    var listener = void 0;\n\n    if (list) {\n      i = list.length;\n      t = this._eventTarget;\n\n      while (--i > -1) {\n        listener = list[i];\n\n        if (listener) {\n          var _e = e || {\n            type: type,\n            target: t\n          };\n\n          listener.c.call(t, _e);\n        }\n      }\n    }\n  },\n  removeAllType: function removeAllType(type, target) {\n    var _this = this;\n\n    var types = type.split('.');\n    var _type = types[0];\n    var namespaces = types[1];\n    var listName = '' + _type + (target ? '_' + target.getAttribute(scrollId) : '');\n    var list = this._listeners[listName];\n    this.recoverLists = this.recoverLists.concat(dataToArray(list).filter(function (item) {\n      return item.n && item.n.match(namespaces);\n    }));\n    this.recoverLists.forEach(function (item) {\n      _this.removeEventListener(item.t + '.' + item.n, item.c, target);\n    });\n  },\n  reAllType: function reAllType(type, target) {\n    var _this2 = this;\n\n    var types = type.split('.');\n    var _type = types[0];\n    var namespaces = types[1];\n    this.recoverLists = this.recoverLists.map(function (item) {\n      if (item.t === _type && item.n.match(namespaces)) {\n        _this2.addEventListener(item.t + '.' + item.n, item.c, target);\n\n        return null;\n      }\n\n      return item;\n    }).filter(function (item) {\n      return item;\n    });\n  }\n};\nexport default new EventDispatcher(typeof window !== 'undefined' && typeof document !== 'undefined' && window);\n;","map":{"version":3,"sources":["/home/paul/Comparator/frontend/node_modules/rc-scroll-anim/es/EventDispatcher.js"],"names":["dataToArray","scrollId","EventDispatcher","target","_listeners","_eventTarget","recoverLists","_listFun","prototype","addEventListener","type","callback","options","types","split","_type","namespaces","getAttribute","setAttribute","Date","now","Math","random","toString","replace","listName","list","index","listener","i","length","n","c","splice","$target","t","dispatchEvent","bind","attachEvent","removeEventListener","force","_force","func","detachEvent","_ref","e","_e","call","removeAllType","_this","concat","filter","item","match","forEach","reAllType","_this2","map","window","document"],"mappings":"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","sourcesContent":["import { dataToArray } from './util';\n\nvar scrollId = 'scroll-id';\n\nfunction EventDispatcher(target) {\n  this._listeners = {};\n  this._eventTarget = target || {};\n  this.recoverLists = [];\n  this._listFun = {};\n}\nEventDispatcher.prototype = {\n  addEventListener: function addEventListener(type, callback, target, options) {\n    var types = type.split('.');\n    var _type = types[0];\n    var namespaces = types[1];\n    if (target && !target.getAttribute(scrollId)) {\n      target.setAttribute(scrollId, (Date.now() + Math.random()).toString(32).replace('.', ''));\n    }\n    var listName = '' + _type + (target ? '_' + target.getAttribute(scrollId) : '');\n    var list = this._listeners[listName];\n    var index = 0;\n    var listener = void 0;\n    var i = void 0;\n    if (!list) {\n      list = [];\n      this._listeners[listName] = list;\n    }\n    i = list.length;\n    while (--i > -1) {\n      listener = list[i];\n      if (listener.n === namespaces && listener.c === callback) {\n        list.splice(i, 1);\n      } else if (index === 0) {\n        index = i + 1;\n      }\n    }\n    var $target = target || this._eventTarget;\n    list.splice(index, 0, { c: callback, n: namespaces, t: _type });\n    if (!this._listFun[listName]) {\n      this._listFun[listName] = this._listFun[listName] || this.dispatchEvent.bind(this, { type: _type, target: target });\n      if ($target.addEventListener) {\n        $target.addEventListener(_type, this._listFun[listName], options);\n      } else if ($target.attachEvent) {\n        $target.attachEvent('on' + _type, this._listFun[listName]);\n      }\n    }\n  },\n  removeEventListener: function removeEventListener(type, callback, target, force) {\n    var types = type.split('.');\n    var _type = types[0];\n    var namespaces = types[1];\n    var listName = '' + _type + (target ? '_' + target.getAttribute(scrollId) : '');\n    var list = this._listeners[listName];\n    var i = void 0;\n    var _force = force;\n    if (!namespaces) {\n      _force = true;\n    }\n    if (list) {\n      i = list.length;\n      var $target = target || this._eventTarget;\n      while (--i > -1) {\n        if (list[i].c === callback && (_force || list[i].n === namespaces)) {\n          list.splice(i, 1);\n          if (!list.length) {\n            var func = this._listFun[listName];\n            delete this._listeners[listName];\n            delete this._listFun[listName];\n            if ($target.removeEventListener) {\n              $target.removeEventListener(_type, func);\n            } else if ($target.detachEvent) {\n              $target.detachEvent('on' + _type, func);\n            }\n          }\n          if (!_force) {\n            return;\n          }\n        }\n      }\n    }\n  },\n  dispatchEvent: function dispatchEvent(_ref, e) {\n    var type = _ref.type,\n        target = _ref.target;\n\n    var listName = '' + type + (target ? '_' + target.getAttribute(scrollId) : '');\n    var list = this._listeners[listName];\n    var i = void 0;\n    var t = void 0;\n    var listener = void 0;\n    if (list) {\n      i = list.length;\n      t = this._eventTarget;\n      while (--i > -1) {\n        listener = list[i];\n        if (listener) {\n          var _e = e || { type: type, target: t };\n          listener.c.call(t, _e);\n        }\n      }\n    }\n  },\n  removeAllType: function removeAllType(type, target) {\n    var _this = this;\n\n    var types = type.split('.');\n    var _type = types[0];\n    var namespaces = types[1];\n    var listName = '' + _type + (target ? '_' + target.getAttribute(scrollId) : '');\n    var list = this._listeners[listName];\n    this.recoverLists = this.recoverLists.concat(dataToArray(list).filter(function (item) {\n      return item.n && item.n.match(namespaces);\n    }));\n    this.recoverLists.forEach(function (item) {\n      _this.removeEventListener(item.t + '.' + item.n, item.c, target);\n    });\n  },\n  reAllType: function reAllType(type, target) {\n    var _this2 = this;\n\n    var types = type.split('.');\n    var _type = types[0];\n    var namespaces = types[1];\n    this.recoverLists = this.recoverLists.map(function (item) {\n      if (item.t === _type && item.n.match(namespaces)) {\n        _this2.addEventListener(item.t + '.' + item.n, item.c, target);\n        return null;\n      }\n      return item;\n    }).filter(function (item) {\n      return item;\n    });\n  }\n};\nexport default new EventDispatcher(typeof window !== 'undefined' && typeof document !== 'undefined' && window);;"]},"metadata":{},"sourceType":"module"}