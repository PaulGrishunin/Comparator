#! /usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var hooks_1 = require("./hooks");
exports.getOverpackHooks = hooks_1.getOverpackHooks;
var yargs = require("yargs");
var Coordinator_1 = require("./Coordinator");
if (require.main === module) {
    var argv = yargs
        .scriptName('overpack')
        .alias('help', 'h')
        .option('config', {
        alias: 'c',
        default: 'webpack.config.js',
        description: 'Webpack config file to load',
    })
        .option('watch', {
        alias: 'w',
        default: false,
        description: 'Whether or not to start Webpack watcher',
    })
        .option('interactive', {
        alias: 'i',
        default: process.stdout.isTTY,
        description: 'Whether or not to run in interactive mode',
    })
        .option('env', {
        default: {},
        description: 'Environment to pass to Webpack',
    })
        .argv;
    var coordinator_1 = new Coordinator_1.Coordinator(argv.config, argv.interactive, argv.watch, argv.env);
    coordinator_1.run().then(function (exitCode) { return process.exit(exitCode); });
    process.on('SIGINT', function () { return process.exit(coordinator_1.stop()); });
}
//# sourceMappingURL=index.js.map